Фабричный метод отвечает за создание объектов и инкапсулирует это операцию в субклассе. Таким образом клиентский код
в суперклассе отделяется от кода создания объекта в субклассе
* Фабричный метод может быть параметризирован для выбора между несколькими разновидностями продукта
* Фабричный метод объявляется абстрактным, чтобы субклассы предоставили реализацию создания объектов.
* Фабричный метод возвращает некий тип Product, обычно оспользуемый методами, определенными в суперклассе
* Фабричный метод изолирует клиента от информации о конкретном типе создаваемого продукта

Паттерн Фабричный метод определяет интерфейс создания объекта, но позволяет субклассам выбрать класс
создаваемого экземпляра. Таким образом, Фабричный метод делегирует операцию
создания экземпляра субклассам.

Паттерн абстрактная фабрика предоставляет интерфейс создания семейств взаимосвязанных и взаимозависимых
объектов без указания конкретных классов

Шаги к построению фабрики
1) класс с потомками
2) enum, в котором определяется enum- переменная для каждого класса-наследника
3) строим MyCLassFactory
4) создаем в фабрике метод createMyCLass, который принимает в себя переменную- enum MyClasType
5) в теле пишем блок switch-case, в котором перебираем все enum значения, и создаем экземпляр класса
соответствующий enum значению